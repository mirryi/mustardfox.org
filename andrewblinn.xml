<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>1037</fr:anchor><fr:addr
type="user">andrewblinn</fr:addr><fr:route>andrewblinn.xml</fr:route><fr:title
text="Andrew Blinn">Andrew Blinn</fr:title><fr:taxon>Person</fr:taxon><fr:authors /><fr:meta
name="position">PhD Student</fr:meta><fr:meta
name="institution"><fr:link
type="local"
href="umich.xml"
addr="umich"
title="The University of Michigan">The University of Michigan</fr:link></fr:meta><fr:meta
name="homepage">https://andrewblinn.com</fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Backlinks">Backlinks</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>1038</fr:anchor><fr:addr
type="user">zzhaoe-0010</fr:addr><fr:route>zzhaoe-0010.xml</fr:route><fr:title
text="EECS 490: Programming Languages (F23, W24)">EECS 490: Programming Languages (F23, W24)</fr:title><fr:taxon>Course</fr:taxon><fr:date><fr:year>2024</fr:year></fr:date><fr:date><fr:year>2023</fr:year></fr:date><fr:authors /><fr:meta
name="institution"><fr:link
type="local"
href="umich.xml"
addr="umich"
title="The University of Michigan">The University of Michigan</fr:link></fr:meta></fr:frontmatter><fr:mainmatter><fr:p>I was the undergraduate teaching assistant for EECS 490 for the 2023-2024 year.</fr:p><fr:blockquote><fr:p>Programming languages are rich mathematical structures and powerful user interfaces. This course covers the design and use of modern programming languages. We will build up systematically from formal first principles while considering human factors in language design, language prototyping, and techniques for reasoning precisely about program behavior throughout the course.</fr:p>

  <fr:p>The goal is to change the way you think about programming and programming language design in ways that will remain relevant across the many technology hype cycles that you will encounter over the course of your careers.</fr:p></fr:blockquote><fr:p>The course was lectured by <fr:link
type="local"
href="cyrusomar.xml"
addr="cyrusomar"
title="Cyrus Omar">Cyrus Omar</fr:link>; <fr:link
type="local"
href="andrewblinn.xml"
addr="andrewblinn"
title="Andrew Blinn">Andrew Blinn</fr:link> and <fr:link
type="local"
href="davidmoon.xml"
addr="davidmoon"
title="David Moon">David Moon</fr:link> were the graduate teaching assistants in F23 and W24, respectively.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Related">Related</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>1039</fr:anchor><fr:addr
type="user">umich</fr:addr><fr:route>umich.xml</fr:route><fr:title
text="The University of Michigan">The University of Michigan</fr:title><fr:taxon>Institution</fr:taxon><fr:authors /><fr:meta
name="homepage">https://umich.edu</fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Contributions">Contributions</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>1040</fr:anchor><fr:addr
type="user">zhao-et-al-2024</fr:addr><fr:route>zhao-et-al-2024.xml</fr:route><fr:title
text="Total Type Error Localization and Recovery with Holes">Total Type Error Localization and Recovery with Holes</fr:title><fr:taxon>Reference</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>1</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author><fr:author><fr:link
type="local"
href="raefmaroof.xml"
addr="raefmaroof"
title="Raef Maroof">Raef Maroof</fr:link></fr:author><fr:author><fr:link
type="local"
href="ananddukkipati.xml"
addr="ananddukkipati"
title="Anand Dukkipati">Anand Dukkipati</fr:link></fr:author><fr:author><fr:link
type="local"
href="andrewblinn.xml"
addr="andrewblinn"
title="Andrew Blinn">Andrew Blinn</fr:link></fr:author><fr:author><fr:link
type="local"
href="zhiyipan.xml"
addr="zhiyipan"
title="Zhiyi Pan">Zhiyi Pan</fr:link></fr:author><fr:author><fr:link
type="local"
href="cyrusomar.xml"
addr="cyrusomar"
title="Cyrus Omar">Cyrus Omar</fr:link></fr:author></fr:authors><fr:meta
name="doi">10.1145/3632910</fr:meta><fr:meta
name="venue"><fr:link
type="local"
href="popl-2024.xml"
addr="popl-2024"
title="POPL 2024">POPL 2024</fr:link></fr:meta><fr:meta
name="slides">zhao-et-al-2024/slides.pdf</fr:meta><fr:meta
name="artifact">zzhaoe-000B</fr:meta><fr:meta
name="bibtex"><![CDATA[@article{zhao_2024,
  title={Total Type Error Localization and Recovery with Holes},
  volume={8},
  issn={2475-1421},
  doi={10.1145/3632910},
  number={POPL},
  journal={Proceedings of the ACM on Programming Languages},
  author={Zhao, Eric and Maroof, Raef and Dukkipati, Anand and Blinn, Andrew and Pan, Zhiyi and Omar, Cyrus},
  year={2024},
  month={Jan},
  pages={2041â€“2068},
  language={en}
}]]></fr:meta></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>493</fr:anchor><fr:addr
type="machine">#247</fr:addr><fr:route>unstable-247.xml</fr:route><fr:title
text="Abstract">Abstract</fr:title><fr:date><fr:year>2024</fr:year><fr:month>1</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author><fr:author><fr:link
type="local"
href="raefmaroof.xml"
addr="raefmaroof"
title="Raef Maroof">Raef Maroof</fr:link></fr:author><fr:author><fr:link
type="local"
href="ananddukkipati.xml"
addr="ananddukkipati"
title="Anand Dukkipati">Anand Dukkipati</fr:link></fr:author><fr:author><fr:link
type="local"
href="andrewblinn.xml"
addr="andrewblinn"
title="Andrew Blinn">Andrew Blinn</fr:link></fr:author><fr:author><fr:link
type="local"
href="zhiyipan.xml"
addr="zhiyipan"
title="Zhiyi Pan">Zhiyi Pan</fr:link></fr:author><fr:author><fr:link
type="local"
href="cyrusomar.xml"
addr="cyrusomar"
title="Cyrus Omar">Cyrus Omar</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Type systems typically only define the conditions under which an expression is well-typed, leaving ill-typed expressions formally meaningless. This approach is insufficient as the basis for language servers driving modern programming environments, which are expected to recover from simultaneously localized errors and continue to provide a variety of downstream semantic services. This paper addresses this problem, contributing the first comprehensive formal account of total type error localization and recovery: the marked lambda calculus. In particular, we define a gradual type system for expressions with marked errors, which operate as non-empty holes, together with a total procedure for marking arbitrary unmarked expressions. We mechanize the metatheory of the marked lambda calculus in Agda and implement it, scaled up, as the new basis for <fr:link
type="local"
href="zzhaoe-000A.xml"
addr="zzhaoe-000A"
title="Hazel">Hazel</fr:link>, a full-scale live functional programming environment with, uniquely, no meaningless editor states.</fr:p><fr:p>The marked lambda calculus is bidirectionally typed, so localization decisions are systematically predictable based on a local flow of typing information. Constraint-based type inference can bring more distant information to bear in discovering inconsistencies but this notoriously complicates error localization. We approach this problem by deploying constraint solving as a type-hole-filling layer atop this gradual bidirectionally typed core. Errors arising from inconsistent unification constraints are localized exclusively to type and expression holes, i.e. the system identifies unfillable holes using a system of traced provenances, rather than localized in an ad hoc manner to particular expressions. The user can then interactively shift these errors to particular downstream expressions by selecting from suggested partially consistent type hole fillings, which returns control back to the bidirectional system. We implement this type hole inference system in <fr:link
type="local"
href="zzhaoe-000A.xml"
addr="zzhaoe-000A"
title="Hazel">Hazel</fr:link>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>1047</fr:anchor><fr:addr
type="user">zzhaoe-000A</fr:addr><fr:route>zzhaoe-000A.xml</fr:route><fr:title
text="Hazel">Hazel</fr:title><fr:taxon>Software</fr:taxon><fr:date><fr:year>2024</fr:year></fr:date><fr:date><fr:year>2021</fr:year></fr:date><fr:authors><fr:author><fr:link
type="local"
href="cyrusomar.xml"
addr="cyrusomar"
title="Cyrus Omar">Cyrus Omar</fr:link></fr:author><fr:author><fr:link
type="local"
href="andrewblinn.xml"
addr="andrewblinn"
title="Andrew Blinn">Andrew Blinn</fr:link></fr:author><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author><fr:author>many, many others</fr:author></fr:authors><fr:meta
name="homepage">https://hazel.org</fr:meta><fr:meta
name="github">hazelgrove/hazel</fr:meta></fr:frontmatter><fr:mainmatter><fr:blockquote>Hazel is a live functional programming environment that is able to typecheck, manipulate, and even run incomplete programs, i.e. programs with holes. There are no meaningless editor states.</fr:blockquote></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>1052</fr:anchor><fr:addr
type="user">zzhaoe-000B</fr:addr><fr:route>zzhaoe-000B.xml</fr:route><fr:title
text="Total Type Error Localization and Recovery with Holes (Agda)">Total Type Error Localization and Recovery with Holes (Agda)</fr:title><fr:taxon>Software</fr:taxon><fr:date><fr:year>2023</fr:year></fr:date><fr:date><fr:year>2022</fr:year></fr:date><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author><fr:author><fr:link
type="local"
href="raefmaroof.xml"
addr="raefmaroof"
title="Raef Maroof">Raef Maroof</fr:link></fr:author><fr:author><fr:link
type="local"
href="ananddukkipati.xml"
addr="ananddukkipati"
title="Anand Dukkipati">Anand Dukkipati</fr:link></fr:author><fr:author><fr:link
type="local"
href="andrewblinn.xml"
addr="andrewblinn"
title="Andrew Blinn">Andrew Blinn</fr:link></fr:author><fr:author><fr:link
type="local"
href="zhiyipan.xml"
addr="zhiyipan"
title="Zhiyi Pan">Zhiyi Pan</fr:link></fr:author><fr:author><fr:link
type="local"
href="cyrusomar.xml"
addr="cyrusomar"
title="Cyrus Omar">Cyrus Omar</fr:link></fr:author></fr:authors><fr:meta
name="doi">10.5281/zenodo.10129703</fr:meta><fr:meta
name="venue"><fr:link
type="local"
href="popl-2024.xml"
addr="popl-2024"
title="POPL 2024">POPL 2024</fr:link></fr:meta><fr:meta
name="github">hazelgrove/error-localization-agda</fr:meta><fr:meta
name="bibtex"><![CDATA[@software{zhao_2023,
  title = {Artifact for Total Type Error Localization and Recovery with Holes},
  url = {https://doi.org/10.5281/zenodo.10129703},
  version = {1.0},
  publisher = {Zenodo},
  author = {Zhao, Eric and Maroof, Raef and Dukkipati, Anand and Blinn, Andrew and Pan, Zhiyi and Omar, Cyrus},
  date = {2023-11},
  doi = {10.5281/zenodo.10129703},
}]]></fr:meta></fr:frontmatter><fr:mainmatter><fr:p>An Agda mechanization of the marked lambda calculus, a judgmental framework for bidirectional type error localization and recovery described in "<fr:link
type="local"
href="zhao-et-al-2024.xml"
addr="zhao-et-al-2024"
title="Total Type Error Localization and Recovery with Holes">Total Type Error Localization and Recovery with Holes</fr:link>".</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:backmatter></fr:tree>